name: "Veracode"

on:
  push:
    branches: [ feature/CPLP-1078_auto_vercode_scan ]
  # pull_request:
  # The branches below must be a subset of the branches above
  # branches: [ main ]
  # paths-ignore:
  #   - "**/*.md"
  #   - "**/*.txt"
  # schedule:
    # Once a day
    # - cron: "0 0 * * 0"
  workflow_dispatch:
  # Trigger manually

env:
  DOTNET_VERSION: '6.0' # The .NET SDK version to use

jobs:
  analyze-backend:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src

      - name: Build and publish
        run: |
          cd src
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend.zip
          src/administration/CatenaX.NetworkServices.Administration.Service/.publish
          src/marketplace/CatenaX.NetworkServices.App.Service/.publish src/portalbackend/CatenaX.NetworkServices.PortalBackend.DBAccess/.publish
          src/portalbackend/CatenaX.NetworkServices.PortalBackend.Migrations/.publish src/portalbackend/CatenaX.NetworkServices.PortalBackend.PortalEntities/.publish
          src/provisioning/CatenaX.NetworkServices.Provisioning.Service/.publish src/registration/CatenaX.NetworkServices.Registration.Service/.publish
          src/registration/CatenaX.NetworkServices.Registration.Service/.publish
          src/maintenance/CatenaX.NetworkServices.Maintenance.App/.publish
          -x
          src/administration/CatenaX.NetworkServices.Administration.Service/.publish/CatenaX.NetworkServices.Administration.Service
          src/marketplace/CatenaX.NetworkServices.App.Service/.publish/CatenaX.NetworkServices.App.Service
          src/provisioning/CatenaX.NetworkServices.Provisioning.Service/.publish/CatenaX.NetworkServices.Provisioning.Service
          src/registration/CatenaX.NetworkServices.Registration.Service/.publish/CatenaX.NetworkServices.Registration.Service
          src/maintenance/CatenaX.NetworkServices.Maintenance.App/.publish/runtimes/*

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal Backend"
          createprofile: false
          # Specify path to upload
          filepath: "portal-backend.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Administration.Service.dll, CatenaX.NetworkServices.App.Service.dll, CatenaX.NetworkServices.PortalBackend.Migrations.dll, CatenaX.NetworkServices.Provisioning.Service.dll, CatenaX.NetworkServices.Registration.Service.dll, CatenaX.NetworkServices.Maintenance.App.dll, CatenaX.NetworkServices.Framework.Cors.dll, CatenaX.NetworkServices.Framework.DBAccess.dll, CatenaX.NetworkServices.Framework.ErrorHandling.dll, CatenaX.NetworkServices.Framework.Models.dll, CatenaX.NetworkServices.Framework.Swagger.dll, CatenaX.NetworkServices.Keycloak.Authentication.dll, CatenaX.NetworkServices.Keycloak.Factory.dll, CatenaX.NetworkServices.Mailing.SendMail.dll, CatenaX.NetworkServices.Mailing.Template.dll, CatenaX.NetworkServices.PortalBackend.DBAccess.dll, CatenaX.NetworkServices.PortalBackend.PortalEntities.dll, CatenaX.NetworkServices.Provisioning.DBAccess.dll, CatenaX.NetworkServices.Provisioning.Library.dll, CatenaX.NetworkServices.Provisioning.Mail.dll, CatenaX.NetworkServices.Provisioning.ProvisioningEntities.dll'

  analyze-administration-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/administration/CatenaX.NetworkServices.Administration.Service

      - name: Build and publish
        run: |
          cd src/administration/CatenaX.NetworkServices.Administration.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-administration-service.zip
          src/administration/CatenaX.NetworkServices.Administration.Service/.publish
          -x
          src/administration/CatenaX.NetworkServices.Administration.Service/.publish/CatenaX.NetworkServices.Administration.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Administration-Service"
          createprofile: false
          # Specify path to upload
          filepath: "portal-backend-administration-service.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Administration.Service.dll, CatenaX.NetworkServices.Framework.DBAccess.dll'
