corsOrigins: http://localhost:3000
issuer: letsencrypt-prod
name: portal-backend
portContainer: 80
portService: 8080
replicaCount: 1

ingress:
  enabled: false

postgresql:
  enabled: true    
  auth:
    existingSecret: secret-postgres-init
  secret:
    password: ""
    replication-password: ""
    init-user-db-sql: ""
  architecture: replication
  audit:
    pgAuditLog: write, ddl
    logLinePrefix: "%m %u %d "
 
registration:
  name: registration-service
  image: 
    repository: ghcr.io/catenax-ng/product-portal-backend_registration-service
    tag: 0.4.5
  secret:
    name: secret-registration
    appsettings: "{}"

administration:
  name: administration-service
  image: 
    repository: ghcr.io/catenax-ng/product-portal-backend_administration-service
    tag: 0.4.5
  secret:
    name: secret-administration
    appsettings: "{}"

provisioning:
  name: provisioning-service
  image: 
    repository: ghcr.io/catenax-ng/product-portal-backend_provisioning-service
    tag: 0.4.5
  secret:
    name: secret-provisioning
    appsettings: "{}"

appmarketplace:
  name: marketplace-app-service
  image: 
    repository: ghcr.io/catenax-ng/product-portal-backend_marketplace-app-service
    tag: 0.4.5
  secret:
    name: secret-appmarketplace
    appsettings: "{}"

portalmigrations:
  name: portal-migrations
  image: 
    repository: ghcr.io/catenax-ng/product-portal-backend_portal-migrations
    tag: 0.4.5
  secret:
    name: secret-portal-migrations
    appsettings: "{}"

portalmaintenance:
  name: portal-maintenance
  image: 
    registry: ghcr.io/catenax-ng/product-portal-backend_maintenance-service
    tag: 0.4.5
  secret:
    name: secret-portal-maintenance
    appsettings: "{}"

notification:
  name: notification-service
  image: 
    repository: ghcr.io/catenax-ng/product-portal-backend_notification-service
    tag: latest
  secret:
    name: secret-notification
    appsettings: "{}"

pgadmin4:
  enabled: false
  ingress:
    enabled: false
